package org.postgresql.sql2.communication.packets.parts;

import org.postgresql.sql2.communication.packets.parsers.BinaryParser;
import org.postgresql.sql2.communication.packets.parsers.TextParser;
import org.postgresql.sql2.util.TriFunction;

import java.util.function.Function;

public enum ColumnTypes {
  BOOL(16, TextParser::boolout, BinaryParser::boolsend),
  BYTEA(17, TextParser::byteaout, BinaryParser::byteasend),
  CHAR(18, TextParser::charout, BinaryParser::charsend),
  NAME(19, TextParser::nameout, BinaryParser::namesend),
  INT8(20, TextParser::int8out, BinaryParser::int8send),
  INT2(21, TextParser::int2out, BinaryParser::int2send),
  INT2VECTOR(22, TextParser::int2vectorout, BinaryParser::int2vectorsend),
  INT4(23, TextParser::int4out, BinaryParser::int4send),
  REGPROC(24, TextParser::regprocout, BinaryParser::regprocsend),
  TEXT(25, TextParser::textout, BinaryParser::textsend),
  OID(26, TextParser::oidout, BinaryParser::oidsend),
  TID(27, TextParser::tidout, BinaryParser::tidsend),
  XID(28, TextParser::xidout, BinaryParser::xidsend),
  CID(29, TextParser::cidout, BinaryParser::cidsend),
  OIDVECTOR(30, TextParser::oidvectorout, BinaryParser::oidvectorsend),
  PG_DDL_COMMAND(32, TextParser::pg_ddl_command_out, BinaryParser::pg_ddl_command_send),
  PG_TYPE(71, TextParser::record_out, BinaryParser::record_send),
  PG_ATTRIBUTE(75, TextParser::record_out, BinaryParser::record_send),
  PG_PROC(81, TextParser::record_out, BinaryParser::record_send),
  PG_CLASS(83, TextParser::record_out, BinaryParser::record_send),
  JSON(114, TextParser::json_out, BinaryParser::json_send),
  XML(142, TextParser::xml_out, BinaryParser::xml_send),
  _XML(143, TextParser::array_out, BinaryParser::array_send),
  PG_NODE_TREE(194, TextParser::pg_node_tree_out, BinaryParser::pg_node_tree_send),
  _JSON(199, TextParser::array_out, BinaryParser::array_send),
  SMGR(210, TextParser::smgrout, null),
  POINT(600, TextParser::point_out, BinaryParser::point_send),
  LSEG(601, TextParser::lseg_out, BinaryParser::lseg_send),
  PATH(602, TextParser::path_out, BinaryParser::path_send),
  BOX(603, TextParser::box_out, BinaryParser::box_send),
  POLYGON(604, TextParser::poly_out, BinaryParser::poly_send),
  LINE(628, TextParser::line_out, BinaryParser::line_send),
  _LINE(629, TextParser::array_out, BinaryParser::array_send),
  CIDR(650, TextParser::cidr_out, BinaryParser::cidr_send),
  _CIDR(651, TextParser::array_out, BinaryParser::array_send),
  FLOAT4(700, TextParser::float4out, BinaryParser::float4send),
  FLOAT8(701, TextParser::float8out, BinaryParser::float8send),
  ABSTIME(702, TextParser::abstimeout, BinaryParser::abstimesend),
  RELTIME(703, TextParser::reltimeout, BinaryParser::reltimesend),
  TINTERVAL(704, TextParser::tintervalout, BinaryParser::tintervalsend),
  UNKNOWN(705, TextParser::unknownout, BinaryParser::unknownsend),
  CIRCLE(718, TextParser::circle_out, BinaryParser::circle_send),
  _CIRCLE(719, TextParser::array_out, BinaryParser::array_send),
  MONEY(790, TextParser::cash_out, BinaryParser::cash_send),
  _MONEY(791, TextParser::array_out, BinaryParser::array_send),
  MACADDR(829, TextParser::macaddr_out, BinaryParser::macaddr_send),
  INET(869, TextParser::inet_out, BinaryParser::inet_send),
  _BOOL(1000, TextParser::array_out, BinaryParser::array_send),
  _BYTEA(1001, TextParser::array_out, BinaryParser::array_send),
  _CHAR(1002, TextParser::array_out, BinaryParser::array_send),
  _NAME(1003, TextParser::array_out, BinaryParser::array_send),
  _INT2(1005, TextParser::array_out, BinaryParser::array_send),
  _INT2VECTOR(1006, TextParser::array_out, BinaryParser::array_send),
  _INT4(1007, TextParser::array_out, BinaryParser::array_send),
  _REGPROC(1008, TextParser::array_out, BinaryParser::array_send),
  _TEXT(1009, TextParser::array_out, BinaryParser::array_send),
  _TID(1010, TextParser::array_out, BinaryParser::array_send),
  _XID(1011, TextParser::array_out, BinaryParser::array_send),
  _CID(1012, TextParser::array_out, BinaryParser::array_send),
  _OIDVECTOR(1013, TextParser::array_out, BinaryParser::array_send),
  _BPCHAR(1014, TextParser::array_out, BinaryParser::array_send),
  _VARCHAR(1015, TextParser::array_out, BinaryParser::array_send),
  _INT8(1016, TextParser::array_out, BinaryParser::array_send),
  _POINT(1017, TextParser::array_out, BinaryParser::array_send),
  _LSEG(1018, TextParser::array_out, BinaryParser::array_send),
  _PATH(1019, TextParser::array_out, BinaryParser::array_send),
  _BOX(1020, TextParser::array_out, BinaryParser::array_send),
  _FLOAT4(1021, TextParser::array_out, BinaryParser::array_send),
  _FLOAT8(1022, TextParser::array_out, BinaryParser::array_send),
  _ABSTIME(1023, TextParser::array_out, BinaryParser::array_send),
  _RELTIME(1024, TextParser::array_out, BinaryParser::array_send),
  _TINTERVAL(1025, TextParser::array_out, BinaryParser::array_send),
  _POLYGON(1027, TextParser::array_out, BinaryParser::array_send),
  _OID(1028, TextParser::array_out, BinaryParser::array_send),
  ACLITEM(1033, TextParser::aclitemout, null),
  _ACLITEM(1034, TextParser::array_out, BinaryParser::array_send),
  _MACADDR(1040, TextParser::array_out, BinaryParser::array_send),
  _INET(1041, TextParser::array_out, BinaryParser::array_send),
  BPCHAR(1042, TextParser::bpcharout, BinaryParser::bpcharsend),
  VARCHAR(1043, TextParser::varcharout, BinaryParser::varcharsend),
  DATE(1082, TextParser::date_out, BinaryParser::date_send),
  TIME(1083, TextParser::time_out, BinaryParser::time_send),
  TIMESTAMP(1114, TextParser::timestamp_out, BinaryParser::timestamp_send),
  _TIMESTAMP(1115, TextParser::array_out, BinaryParser::array_send),
  _DATE(1182, TextParser::array_out, BinaryParser::array_send),
  _TIME(1183, TextParser::array_out, BinaryParser::array_send),
  TIMESTAMPTZ(1184, TextParser::timestamptz_out, BinaryParser::timestamptz_send),
  _TIMESTAMPTZ(1185, TextParser::array_out, BinaryParser::array_send),
  INTERVAL(1186, TextParser::interval_out, BinaryParser::interval_send),
  _INTERVAL(1187, TextParser::array_out, BinaryParser::array_send),
  _NUMERIC(1231, TextParser::array_out, BinaryParser::array_send),
  PG_DATABASE(1248, TextParser::record_out, BinaryParser::record_send),
  _CSTRING(1263, TextParser::array_out, BinaryParser::array_send),
  TIMETZ(1266, TextParser::timetz_out, BinaryParser::timetz_send),
  _TIMETZ(1270, TextParser::array_out, BinaryParser::array_send),
  BIT(1560, TextParser::bit_out, BinaryParser::bit_send),
  _BIT(1561, TextParser::array_out, BinaryParser::array_send),
  VARBIT(1562, TextParser::varbit_out, BinaryParser::varbit_send),
  _VARBIT(1563, TextParser::array_out, BinaryParser::array_send),
  NUMERIC(1700, TextParser::numeric_out, BinaryParser::numeric_send),
  REFCURSOR(1790, TextParser::textout, BinaryParser::textsend),
  _REFCURSOR(2201, TextParser::array_out, BinaryParser::array_send),
  REGPROCEDURE(2202, TextParser::regprocedureout, BinaryParser::regproceduresend),
  REGOPER(2203, TextParser::regoperout, BinaryParser::regopersend),
  REGOPERATOR(2204, TextParser::regoperatorout, BinaryParser::regoperatorsend),
  REGCLASS(2205, TextParser::regclassout, BinaryParser::regclasssend),
  REGTYPE(2206, TextParser::regtypeout, BinaryParser::regtypesend),
  _REGPROCEDURE(2207, TextParser::array_out, BinaryParser::array_send),
  _REGOPER(2208, TextParser::array_out, BinaryParser::array_send),
  _REGOPERATOR(2209, TextParser::array_out, BinaryParser::array_send),
  _REGCLASS(2210, TextParser::array_out, BinaryParser::array_send),
  _REGTYPE(2211, TextParser::array_out, BinaryParser::array_send),
  RECORD(2249, TextParser::record_out, BinaryParser::record_send),
  CSTRING(2275, TextParser::cstring_out, BinaryParser::cstring_send),
  ANY(2276, TextParser::any_out, null),
  ANYARRAY(2277, TextParser::anyarray_out, BinaryParser::anyarray_send),
  VOID(2278, TextParser::void_out, BinaryParser::void_send),
  TRIGGER(2279, TextParser::trigger_out, null),
  LANGUAGE_HANDLER(2280, TextParser::language_handler_out, null),
  INTERNAL(2281, TextParser::internal_out, null),
  OPAQUE(2282, TextParser::opaque_out, null),
  ANYELEMENT(2283, TextParser::anyelement_out, null),
  _RECORD(2287, TextParser::array_out, BinaryParser::array_send),
  ANYNONARRAY(2776, TextParser::anynonarray_out, null),
  PG_AUTHID(2842, TextParser::record_out, BinaryParser::record_send),
  PG_AUTH_MEMBERS(2843, TextParser::record_out, BinaryParser::record_send),
  _TXID_SNAPSHOT(2949, TextParser::array_out, BinaryParser::array_send),
  UUID(2950, TextParser::uuid_out, BinaryParser::uuid_send),
  _UUID(2951, TextParser::array_out, BinaryParser::array_send),
  TXID_SNAPSHOT(2970, TextParser::txid_snapshot_out, BinaryParser::txid_snapshot_send),
  FDW_HANDLER(3115, TextParser::fdw_handler_out, null),
  PG_LSN(3220, TextParser::pg_lsn_out, BinaryParser::pg_lsn_send),
  _PG_LSN(3221, TextParser::array_out, BinaryParser::array_send),
  TSM_HANDLER(3310, TextParser::tsm_handler_out, null),
  ANYENUM(3500, TextParser::anyenum_out, null),
  TSVECTOR(3614, TextParser::tsvectorout, BinaryParser::tsvectorsend),
  TSQUERY(3615, TextParser::tsqueryout, BinaryParser::tsquerysend),
  GTSVECTOR(3642, TextParser::gtsvectorout, null),
  _TSVECTOR(3643, TextParser::array_out, BinaryParser::array_send),
  _GTSVECTOR(3644, TextParser::array_out, BinaryParser::array_send),
  _TSQUERY(3645, TextParser::array_out, BinaryParser::array_send),
  REGCONFIG(3734, TextParser::regconfigout, BinaryParser::regconfigsend),
  _REGCONFIG(3735, TextParser::array_out, BinaryParser::array_send),
  REGDICTIONARY(3769, TextParser::regdictionaryout, BinaryParser::regdictionarysend),
  _REGDICTIONARY(3770, TextParser::array_out, BinaryParser::array_send),
  JSONB(3802, TextParser::jsonb_out, BinaryParser::jsonb_send),
  _JSONB(3807, TextParser::array_out, BinaryParser::array_send),
  ANYRANGE(3831, TextParser::anyrange_out, null),
  EVENT_TRIGGER(3838, TextParser::event_trigger_out, null),
  INT4RANGE(3904, TextParser::range_out, BinaryParser::range_send),
  _INT4RANGE(3905, TextParser::array_out, BinaryParser::array_send),
  NUMRANGE(3906, TextParser::range_out, BinaryParser::range_send),
  _NUMRANGE(3907, TextParser::array_out, BinaryParser::array_send),
  TSRANGE(3908, TextParser::range_out, BinaryParser::range_send),
  _TSRANGE(3909, TextParser::array_out, BinaryParser::array_send),
  TSTZRANGE(3910, TextParser::range_out, BinaryParser::range_send),
  _TSTZRANGE(3911, TextParser::array_out, BinaryParser::array_send),
  DATERANGE(3912, TextParser::range_out, BinaryParser::range_send),
  _DATERANGE(3913, TextParser::array_out, BinaryParser::array_send),
  INT8RANGE(3926, TextParser::range_out, BinaryParser::range_send),
  _INT8RANGE(3927, TextParser::array_out, BinaryParser::array_send),
  REGNAMESPACE(4089, TextParser::regnamespaceout, BinaryParser::regnamespacesend),
  _REGNAMESPACE(4090, TextParser::array_out, BinaryParser::array_send),
  REGROLE(4096, TextParser::regroleout, BinaryParser::regrolesend),
  _REGROLE(4097, TextParser::array_out, BinaryParser::array_send),
  OTHER(0, TextParser::passthrough, null);

  private final int oid;
  private final Function<String, Object> textParser;
  private final TriFunction<byte[], Integer, Integer, Object> binaryParser;

  ColumnTypes(int oid, Function<String, Object> textParser, TriFunction<byte[], Integer, Integer, Object> binaryParser) {
    this.oid = oid;
    this.textParser = textParser;
    this.binaryParser = binaryParser;
  }

  public static ColumnTypes lookup(int oid) {
    for(ColumnTypes ct : values()) {
      if(ct.oid == oid)
        return ct;
    }

    return OTHER;
  }

  public Function<String, Object> getTextParser() {
    return textParser;
  }

  public TriFunction<byte[], Integer, Integer, Object> getBinaryParser() {
    return binaryParser;
  }
}
